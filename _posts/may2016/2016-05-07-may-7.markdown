---
layout: post
title:  "The Blogging Gauntlet: May 7 - Shaping Thought Processes"
date:   2016-05-07 9:51:00 -0700
---

{% include gauntlet.md %}

About a week ago, a friend of mine made a Facebook post.

> That moment when you accidentally use bodywash instead of shampoo,
> and think "this should have been caught at compile time"

Everybody laugh, cue snare drum, etc. But, it got me thinking.
This friend of mine is someone who's done functional programming,
and thinks a lot about programming languages. It's fitting for him
to think about catching mistakes at compile time. To quote the
[Haskell wiki](https://wiki.haskell.org/Why_Haskell_just_works),

> A lot of people experience a curious phenomenon when they start using Haskell: Once your code compiles it usually works.

I started reflecting on other times people have used their area of
expertise to reason about events in their life, and the list grew
faster than I thought.

In the 2nd-to-last week of classes, a student in the graduate level machine learning/stats
course I'm taking said he had very high regret because he procrastinated
making his poster until now.

Last weekend, I did a puzzle hunt with someone who does systems
research in [AMPLab](https://amplab.cs.berkeley.edu/). At one point, a few
members left to do an on-campus puzzle. He said it made more sense to work on
a new puzzle instead of getting caught up on the partial progress of the puzzle
they abandoned. Or more specifically, he said they already had that puzzle loaded
into their cache, so it wasn't worth the context switching time.

In one memorable math session, someone decided the word "three" was a variable,
leading to insane sentences like "If three is bigger than eight, then this property
should hold."

And if it wasn't already clear, I'm among these people who have let their
technical knowledge blend into their real world thoughts. I literally just
wrote a post about [online milk tea regret minimization]({% post_url 2016-05-05-may-5 %}).
I've also described my decision making as a [priority queue](https://en.wikipedia.org/wiki/Priority_queue).
I get offered a task with high priority. I can either do it like a productive
person, or procrastinate it by placing it back into the queue with lower
priority. Perhaps that's my algorithms side bleeding out.

To me, it seems like the more you think about a subject, the more it shapes
the way you think in general. I'm sure that leads to all sorts of stereotypes.
Physicists round constants to orders of magnitude, theoretical computer
scientists throw out constants entirely. I don't know of stereotypes for
biologists or chemists, but I'd guess they place more on the process of things -
how things change from one thing into another. And then of course, math majors
are both pedantic and willing to treat absurd scenarios with total seriousness,
because math eventually turns into reasoning about abstract structures that
have no real world analogue. When there's a rich body of math based around
assuming there are no naturals larger than $$5$$, treating "three" as a variable
isn't that surprising.

I don't think this is a bad thing. I also don't think it's a good thing. It's
simply a thing; a way that our brains work. I'm sure if you asked, every major
could give you a way their major has shaped their thoughts to make them a better
person. Math made me a better problem solver and a more detail-oriented person.
Astrophysics helped me imagine scales of exponentially large numbers, and gave
me more reason to care about Earth. Philosophy made me better at arguing my
points. Public health made me more empathetic.

Which is the "best" field of study for shaping your thoughts? There isn't one.
Humanity probably needs all of these modes of thinking, and we'll borrow the hats
of others if we need to think in a way that's unfamiliar to us.

